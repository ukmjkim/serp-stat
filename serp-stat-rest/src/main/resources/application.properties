spring.datasource.url=jdbc:mysql://serpstat:3306/serpstat?autoReconnect=true&useSSL=false
spring.datasource.username=serpstat
spring.datasource.password=statserp
spring.datasource.tomcat.max-wait=20000
spring.datasource.tomcat.max-active=50
spring.datasource.tomcat.max-idle=20
spring.datasource.tomcat.min-idle=15

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.id.new_generator_mappings = false
spring.jpa.properties.hibernate.show_sql = true
spring.jpa.properties.hibernate.format_sql = true

info.app.name=SERP Stat Rest API
info.app.description=This is Rest API Web Service to provide SERP Statistics
info.app.version=1.0.0

# ----------------------------------------
# ACTUATOR PROPERTIES
# ----------------------------------------
endpoints.info.enabled=true
endpoints.beans.enabled=true
endpoints.default.enabled=true
endpoints.env.enabled=true
endpoints.autoconfig.enabled=true
endpoints.health.enabled=true
endpoints.metrics.enabled=true
endpoints.loggers.enabled=true
endpoints.mappings.enabled=true
endpoints.trace.enabled=true
endpoints.threaddump.enabled=true
endpoints.customhealth.enabled=true

# ----------------------------------------
# SPRING HATEOAS (HateoasProperties)
# ----------------------------------------
# spring.hateoas.use-hal-as-default-json-media-type=true

# ----------------------------------------
# HEALTH INDICATORS
# ----------------------------------------
management.health.db.enabled=true
management.health.defaults.enabled=true
management.health.diskspace.enabled=true
management.health.diskspace.path=/Users/
management.health.diskspace.threshold=1000000000
management.health.status.order=DOWN, OUT_OF_SERVICE, UP, UNKNOWN

# ----------------------------------------
# INFO CONTRIBUTORS (InfoContributorProperties)
# ----------------------------------------
management.info.build.enabled=true
management.info.defaults.enabled=true
management.info.env.enabled=true
management.info.git.enabled=true
management.info.git.mode=simple

# ----------------------------------------
# METRICS
# ----------------------------------------
spring.metrics.use-global-registry=true
spring.metrics.export.atlas.enabled=true
spring.metrics.export.ganglia.enabled=true
spring.metrics.export.graphite.enabled=true
spring.metrics.export.influx.enabled=true
spring.metrics.export.jmx.enabled=true
spring.metrics.export.prometheus.enabled=true
spring.metrics.export.simple.enabled=true
spring.metrics.jdbc.datasource-metric-name=data.source
spring.metrics.jdbc.instrument-datasource=true
spring.metrics.web.client.record-request-percentiles=false
spring.metrics.web.client.requests-metric-name=http.client.requests
spring.metrics.web.server.auto-time-requests=true
spring.metrics.web.server.record-request-percentiles=false
spring.metrics.web.server.requests-metric-name=http.server.requests

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE 


security.oauth2.resource.filter-order=3

security.signing-key=MaYzkSjmkzPC57L
security.encoding-strength=256
security.security-realm=Spring Boot JWT Example Realm

security.jwt.client-id=testjwtclientid
security.jwt.client-secret=XY7kmzoNzl100
security.jwt.grant-type=password
security.jwt.scope-read=read
security.jwt.scope-write=write
security.jwt.resource-ids=testjwtresourceid