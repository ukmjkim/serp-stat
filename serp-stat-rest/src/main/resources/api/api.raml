#%RAML 1.0
#api.raml
title: SERP Stat Restful API
version: v1
protocols: [ HTTP ]
baseUri: http://serpstat.com:8080/api/{version}
mediaType: application/json
securedBy: basicAuth
securitySchemes:
  basicAuth:
    description: Each request must contain the headers necessary forbasic authentication
    type: Basic Authentication
    describedBy:
      headers:
        Authorization:
          description: |
            Used to send the Base64 encoded "username:password"
            credentials
            type: string
      responses:
        401:
          description: |
            Unauthorized. Either the provided username and password
            combination is invalid, or the user is not allowed to
            access the content provided by the requested URL.
types:
  User:  !include types/User.raml
  Site:  !include types/Site.raml
  Keyword:  !include types/Keyword.raml
  Error: !include types/Error.raml

resourceTypes:
  collection:
      usage: Use this resourceType to represent a collection of items
      description: A collection of <<resourcePathName|!uppercamelcase>>
      get:
        description: |
          Get all <<resourcePathName|!uppercamelcase>>,
          optionally filtered
        is: [ hasResponseCollection: { typeName: <<typeName>> } ]
      post:
        description: |
          Create a new <<resourcePathName|!uppercamelcase|!singularize>>
        is: [ hasRequestItem: { typeName: <<typeName>> } ]
  item:
      usage: Use this resourceType to represent any single item
      description: A single <<resourcePathName|!uppercamelcase|!singularize>>
      get:
        description: Get a <<resourcePathName|!uppercamelcase|!singularize>> by <<resourcePathName>>
        is: [ hasResponseItem: { typeName: <<typeName>> }, hasNotFound ]
      put:
        description: Update a <<resourcePathName|!uppercamelcase|!singularize>> by <<resourcePathName>>
        is: [ hasRequestItem: { typeName: <<typeName>> }, hasResponseItem, hasNotFound ]
      delete:
        description: Delete a <<resourcePathName|!uppercamelcase|!singularize>> by <<resourcePathName>>
        is: [ hasNotFound ]
        responses:
          204:
traits:
  hasRequestItem:
    body:
      application/json:
        type: <<resourcePathName|!uppercamelcase|!singularize>>
  hasResponseItem:
    responses:
      200:
        body:
          application/json:
            type: <<resourcePathName|!uppercamelcase|!singularize>>
            example: !include examples/<<resourcePathName|!uppercamelcase|!singularize>>.json
  hasResponseCollection:
    responses:
      200:
        body:
          application/json:
            type: <<resourcePathName|!uppercamelcase|!singularize>>[]
            example: !include examples/<<resourcePathName|!uppercamelcase|!pluralize>>.json
  hasNotFound:
    responses:
      404:
        body:
          application/json:
            type: Error
            example: !include examples/Error.json
/devices:
  type: collection:
  typeName: Device
  get:
  post:
  /{deviceId}:
    type: item
    typeName: Device
    get:
    put:
    delete:
/markets:
  type: collection
  typeName: Market
  get:
  post:
  /{marketId}:
    type: item
    typeName: Market
    get:
    put:
    delete:
/users:
  type: collection
  typeName: User
  get:
    queryParameters:
      name?: string
      ownerName?: string
  post:
  /{userId}:
    type: item
    typeName: User
    get:
    put:
    delete:
    /sites:
      type: collection
      typeName: Site
      get:
      post:
/sites:
  /{siteId}:
    type: item
    typeName: Site
    get:
    put:
    delete:
    /keywords:
      type: collection
      typeName: Keyword
      get:
      post:
      /paginated:
        type: collection
        typeName: Keyword
        get:
          queryParameters:
            offset?: number
            size?: number
      /count:
        type: number
        get:
      /{keywordId}:
        type: item
        typeName: Keyword
        get:
        put:
        delete:
    /stats:
      type: collection
      typeName: SiteStat
      get:
        queryParameters:
          fromDate?: number
          toDate?: number
      post:
      /{statId}:
        type: item
        typeName: SiteStat
        get:
        put:
        delete:
    /distribs:
      type: collection
      typeName: SiteDistrib
      get:
        queryParameters:
          fromDate?: number
          toDate?: number
      post:
      /{distribId}:
        type: item
        typeName: SiteDistrib
        get:
        put:
        delete:
    /searchvolumes:
      type: collection
      typeName: SiteSearchVolume
      get:
        queryParameters:
          fromDate?: number
          toDate?: number
      post:
      /{searchVolumeId}:
        type: item
        typeName: SiteSearchVolume
        get:
        put:
        delete:
/tags:
  /{tagId}:
    type: item
    typeName: Tag
    get:
    put:
    delete:
    /keywords:
      type: collection
      typeName: Keyword
      get:
      post:
      /paginated:
        type: collection
        typeName: Keyword
        get:
          queryParameters:
            offset?: number
            size?: number
      /count:
        type: number
        get:
      /{keywordId}:
        type: item
        typeName: Keyword
        get:
        put:
        delete:
    /stats:
      type: collection
      typeName: TagStat
      get:
        queryParameters:
          fromDate?: number
          toDate?: number
      post:
      /{statId}:
        type: item
        typeName: TagStat
        get:
        put:
        delete:
    /distribs:
      type: collection
      typeName: TagDistrib
      get:
        queryParameters:
          fromDate?: number
          toDate?: number
      post:
      /{distribId}:
        type: item
        typeName: TagDistrib
        get:
        put:
        delete:
    /searchvolumes:
      type: collection
      typeName: TagSearchVolume
      get:
        queryParameters:
          fromDate?: number
          toDate?: number
      post:
      /{searchVolumeId}:
        type: item
        typeName: TagSearchVolume
        get:
        put:
        delete:
